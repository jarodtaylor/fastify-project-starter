name: Pre-commit Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  pre-commit:
    name: 🔍 Pre-commit Checks
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Check for common issues
        run: |
          # Check for large files (exclude all node_modules, .git, templates, and common large file patterns)
          if find . -type f -size +10M \
            -not -path "*/node_modules/*" \
            -not -path "./.git/*" \
            -not -path "./templates/*" \
            -not -path "*/.turbo/*" \
            -not -path "*/dist/*" \
            -not -path "*/build/*" \
            -not -path "*/.next/*" \
            -not -path "*/.react-router/*" \
            -not -name "*.log" | grep -q .; then
            echo "❌ Large files found!"
            find . -type f -size +10M \
              -not -path "*/node_modules/*" \
              -not -path "./.git/*" \
              -not -path "./templates/*" \
              -not -path "*/.turbo/*" \
              -not -path "*/dist/*" \
              -not -path "*/build/*" \
              -not -path "*/.next/*" \
              -not -path "*/.react-router/*" \
              -not -name "*.log"
            exit 1
          fi

          # Check for secrets/sensitive data (avoid false positives)
          if grep -r \
            -E '(api_key|apikey|secret_key|private_key|access_token|auth_token|bearer_token)' \
            --include="*.ts" --include="*.js" --include="*.json" \
            --exclude-dir=node_modules --exclude-dir=.git \
            --exclude="**/replace-vars.ts" \
            --exclude="**/.env.example" \
            . 2>/dev/null; then
            echo "❌ Potential secrets found!"
            echo "ℹ️  Check for hardcoded API keys, tokens, or passwords"
            exit 1
          fi

          # Check for console.log statements in production files (excluding server startup messages)
          # Find console.log statements but exclude legitimate server entry files and templates
          if grep -r "console\.log" packages/cli/ --include="*.ts" --include="*.tsx" 2>/dev/null | \
             grep -v -E "(.*server\.ts|.*main\.ts)"; then
            echo "❌ Console.log statements found in CLI files!"
            echo "ℹ️  Remove debug console.log statements"
            grep -r "console\.log" packages/cli/ --include="*.ts" --include="*.tsx" 2>/dev/null | \
              grep -v -E "(.*server\.ts|.*main\.ts)"
            exit 1
          fi

      - name: 🎨 Check formatting (Root)
        run: pnpm format:check

      - name: 🔍 Lint check (Root)
        run: pnpm lint

      - name: 🔍 CLI type check
        run: |
          cd packages/cli
          pnpm typecheck

      - name: 🔍 Template type check
        run: |
          cd templates/react-router
          pnpm typecheck
